#!/usr/bin/python3
try:
    import os, time, sys, requests
    from colorama import init
    from colorama import Fore, Back, Style
except BaseException:
    os.system('pip3 install colorama requests')
    import requests
    from colorama import init
    from colorama import Fore, Back, Style

init(autoreset = True)

os.system('clear || cls || :')

# Title by https://patorjk.com/software/taag/#p=display&f=Puffy&t=islinksus
Welcome_Text = f"""
{Fore.CYAN}          _            {Fore.LIGHTCYAN_EX}  _                        
{Fore.CYAN} _       (_ )  _       {Fore.LIGHTCYAN_EX} ( )                       
{Fore.CYAN}(_)  ___  | | (_)  ___ {Fore.LIGHTCYAN_EX} | |/')   ___  _   _   ___ 
{Fore.CYAN}| |/',__) | | | |/' _ `\{Fore.LIGHTCYAN_EX}| , <  /',__)( ) ( )/',__)
{Fore.CYAN}| |\__, \ | | | || ( ) |{Fore.LIGHTCYAN_EX}| |\`\ \__, \| (_) |\__, \\
{Fore.CYAN}(_)(____/(___)(_)(_) (_){Fore.LIGHTCYAN_EX}(_) (_)(____/`\___/'(____/
{Fore.CYAN}                                           {Fore.LIGHTCYAN_EX}       
{Fore.CYAN}                                                  {Fore.LIGHTCYAN_EX}
The program needs internet to check some links.
"""

def Log(Text = ''):
    if Text != '' and Text != None:
        print(Fore.LIGHTMAGENTA_EX + 'is'+Fore.LIGHTBLUE_EX+'link'+Fore.LIGHTRED_EX+'sus: '+ Fore.LIGHTGREEN_EX +str(Text))
def Warning(Text = ''):
    if Text != '' and Text != None:
        print(Fore.RED+'[WARNING] '+Fore.LIGHTMAGENTA_EX + 'is'+Fore.LIGHTBLUE_EX+'link'+Fore.LIGHTRED_EX+'sus: '+ Fore.LIGHTGREEN_EX +str(Text))
def Info(Text = ''):
    if Text != '' and Text != None:
        print(Fore.BLUE+'[INFO] '+Fore.LIGHTMAGENTA_EX + 'is'+Fore.LIGHTBLUE_EX+'link'+Fore.LIGHTRED_EX+'sus: '+ Fore.LIGHTGREEN_EX +str(Text))
def Welcome():
    print(Welcome_Text)
    if not (('-s' in sys.argv) or ('--silent' in sys.argv)): Log('Welcome!')
    URL = str(input(Fore.RED + 'Enter your link here: -> ' + Fore.MAGENTA))
    return str(URL)
def Check(link):
    http_malicious_links = requests.get('https://raw.githubusercontent.com/VBPROGER/is-link-sus/main/db/smalldb.db')

    Log('Checking if in malicious URL database...')
    if link.startswith('http://') or link.startswith('https://') or link.startswith('ftp://'):
        Log('Link is HTTPS, HTTP or FTP.')
        if link.startswith('http://'):
            Protocol = 'http://'
            if not (('-s' in sys.argv) or ('--silent' in sys.argv)):
                Log('Currently, the link seems to be HTTP.')
        if link.startswith('https://'):
            Protocol = 'https://'
            if not (('-s' in sys.argv) or ('--silent' in sys.argv)):
                Log('Currently, the link seems to be HTTPS. HTTPS is safe.')
        if link.startswith('ftp://'):
            Protocol = 'ftp://'
            if not (('-s' in sys.argv) or ('--silent' in sys.argv)):
                Log('Currently, the link seems to be FTP.')
        link_edited = ''
        for every_link in http_malicious_links:
            every_link = str(every_link)
            if not (('-s' in sys.argv) or ('--silent' in sys.argv)):
                Log('Removing unused parts of link "'+link+'"')
            link_edited = ''
            link_edited = str(link).replace('\n', '')
            link_edited = link_edited.replace(Protocol, '')
            link_edited = link_edited.split('/')[0]
            if not (('-s' in sys.argv) or ('--silent' in sys.argv)):
                Log('Checking current link with malicious link "'+every_link+'"...')
            if link_edited == every_link or link_edited in every_link:
                Warning('WARNING! Found this link in malicious links list!')
                return True
            else:
                if not (('-s' in sys.argv) or ('--silent' in sys.argv)):
                    Log('Link "'+str(link)+'" seems safe, it doesn'+"'"+'t looks like "'+str(every_link)+'".')
            time.sleep(0.004)
    else:
        Log('Link is NOT HTTPS, HTTP or FTP.')
        link_edited = ''
        for every_link in http_malicious_links:
            every_link = str(every_link)
            Log('Removing unused parts of link "'+link+'"')
            link_edited = ''
            link_edited = str(link).replace('\n', '')
            link_edited = link_edited.split('/')[0]
            Log('Checking current link with malicious link "'+every_link+'"...')
            if link_edited == every_link or link_edited in every_link:
                Warning('WARNING! Found this link in malicious links list!')
                return True
            else:
                Log('Link "'+str(link)+'" seems safe, it doesn'+"'"+'t looks like "'+str(every_link)+'".')
            time.sleep(0.004)

URL = Welcome()
Status = Check(link = URL)
Log('Finished scanning link "'+URL+'"! Results:')
if Status == True:
    Warning("This link is dangerous! Don't click it.")
else:
    Info("This link seems safe! But be aware, it may be suspicious...")
